package com.hengye.share.model.greenrobot;

import com.hengye.share.model.greenrobot.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "FOLLOWER".
 */
public class Follower implements java.io.Serializable {

    private Long id;
    /** Not-null value. */
    private String uid;
    /** Not-null value. */
    private String tid;
    /** Not-null value. */
    private String name;
    private String pinyinName;
    private String gender;
    private String description;
    private String avatar;
    private Integer verified;
    private Integer verifiedType;
    private Integer following;
    private Integer followMe;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient FollowerDao myDao;


    // KEEP FIELDS - put your custom fields here
    private static final long serialVersionUID = 365425172345210830L;
    // KEEP FIELDS END

    public Follower() {
    }

    public Follower(Long id) {
        this.id = id;
    }

    public Follower(Long id, String uid, String tid, String name, String pinyinName, String gender, String description, String avatar, Integer verified, Integer verifiedType, Integer following, Integer followMe) {
        this.id = id;
        this.uid = uid;
        this.tid = tid;
        this.name = name;
        this.pinyinName = pinyinName;
        this.gender = gender;
        this.description = description;
        this.avatar = avatar;
        this.verified = verified;
        this.verifiedType = verifiedType;
        this.following = following;
        this.followMe = followMe;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getFollowerDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getUid() {
        return uid;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setUid(String uid) {
        this.uid = uid;
    }

    /** Not-null value. */
    public String getTid() {
        return tid;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setTid(String tid) {
        this.tid = tid;
    }

    /** Not-null value. */
    public String getName() {
        return name;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setName(String name) {
        this.name = name;
    }

    public String getPinyinName() {
        return pinyinName;
    }

    public void setPinyinName(String pinyinName) {
        this.pinyinName = pinyinName;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getAvatar() {
        return avatar;
    }

    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

    public Integer getVerified() {
        return verified;
    }

    public void setVerified(Integer verified) {
        this.verified = verified;
    }

    public Integer getVerifiedType() {
        return verifiedType;
    }

    public void setVerifiedType(Integer verifiedType) {
        this.verifiedType = verifiedType;
    }

    public Integer getFollowing() {
        return following;
    }

    public void setFollowing(Integer following) {
        this.following = following;
    }

    public Integer getFollowMe() {
        return followMe;
    }

    public void setFollowMe(Integer followMe) {
        this.followMe = followMe;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
