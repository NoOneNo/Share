package com.hengye.share.model.greenrobot;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.hengye.share.model.greenrobot.TopicDraft;
import com.hengye.share.model.greenrobot.User;
import com.hengye.share.model.greenrobot.GroupList;
import com.hengye.share.model.greenrobot.GroupMember;
import com.hengye.share.model.greenrobot.Follower;
import com.hengye.share.model.greenrobot.ShareJson;

import com.hengye.share.model.greenrobot.TopicDraftDao;
import com.hengye.share.model.greenrobot.UserDao;
import com.hengye.share.model.greenrobot.GroupListDao;
import com.hengye.share.model.greenrobot.GroupMemberDao;
import com.hengye.share.model.greenrobot.FollowerDao;
import com.hengye.share.model.greenrobot.ShareJsonDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig topicDraftDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig groupListDaoConfig;
    private final DaoConfig groupMemberDaoConfig;
    private final DaoConfig followerDaoConfig;
    private final DaoConfig shareJsonDaoConfig;

    private final TopicDraftDao topicDraftDao;
    private final UserDao userDao;
    private final GroupListDao groupListDao;
    private final GroupMemberDao groupMemberDao;
    private final FollowerDao followerDao;
    private final ShareJsonDao shareJsonDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        topicDraftDaoConfig = daoConfigMap.get(TopicDraftDao.class).clone();
        topicDraftDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        groupListDaoConfig = daoConfigMap.get(GroupListDao.class).clone();
        groupListDaoConfig.initIdentityScope(type);

        groupMemberDaoConfig = daoConfigMap.get(GroupMemberDao.class).clone();
        groupMemberDaoConfig.initIdentityScope(type);

        followerDaoConfig = daoConfigMap.get(FollowerDao.class).clone();
        followerDaoConfig.initIdentityScope(type);

        shareJsonDaoConfig = daoConfigMap.get(ShareJsonDao.class).clone();
        shareJsonDaoConfig.initIdentityScope(type);

        topicDraftDao = new TopicDraftDao(topicDraftDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        groupListDao = new GroupListDao(groupListDaoConfig, this);
        groupMemberDao = new GroupMemberDao(groupMemberDaoConfig, this);
        followerDao = new FollowerDao(followerDaoConfig, this);
        shareJsonDao = new ShareJsonDao(shareJsonDaoConfig, this);

        registerDao(TopicDraft.class, topicDraftDao);
        registerDao(User.class, userDao);
        registerDao(GroupList.class, groupListDao);
        registerDao(GroupMember.class, groupMemberDao);
        registerDao(Follower.class, followerDao);
        registerDao(ShareJson.class, shareJsonDao);
    }
    
    public void clear() {
        topicDraftDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        groupListDaoConfig.getIdentityScope().clear();
        groupMemberDaoConfig.getIdentityScope().clear();
        followerDaoConfig.getIdentityScope().clear();
        shareJsonDaoConfig.getIdentityScope().clear();
    }

    public TopicDraftDao getTopicDraftDao() {
        return topicDraftDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public GroupListDao getGroupListDao() {
        return groupListDao;
    }

    public GroupMemberDao getGroupMemberDao() {
        return groupMemberDao;
    }

    public FollowerDao getFollowerDao() {
        return followerDao;
    }

    public ShareJsonDao getShareJsonDao() {
        return shareJsonDao;
    }

}
